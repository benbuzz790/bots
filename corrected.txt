
Before execution is complete - dummy result put in place to satisfy API requirement for paired tool requests and results

Assistant (tool_use: branch_self, id=X)
    └── User (tool_result: id=X, content="Branching In Progress...") + "(self-prompt): task 1"
    │   └── Assistant: "response to task1"
    ├── User (tool_result: id=X, content="Branching In Progress...") + "(self-prompt): task2"
    │   └── Assistant: "response to task2"
    └── User (tool_result: id=X, content="Branching In Progress...") + "(self-prompt): task3"
    	└── Assistant: "response to task3"

After execution is complete, but before another message is sent - pending result with summary is added to original node (as is the case with every tool result)

Assistant (tool_use: branch_self, id=X) + (pending_result: tool_result: id=X, content="Successfully created... and summary...")
    └── User (tool_result: id=X, content="Branching In Progress...") + "(self-prompt): task 1"
    │   └── Assistant: "response to task1"
    ├── User (tool_result: id=X, content="Branching In Progress...") + "(self-prompt): task2"
    │   └── Assistant: "response to task2"
    └── User (tool_result: id=X, content="Branching In Progress...") + "(self-prompt): task3"
    	 └── Assistant: "response to task3"

After the next user message is sent - Tool results sync across nodes

Assistant (tool_use: branch_self, id=X) + (pending_result: tool_result: id=X, content="Successfully created... and summary...")
    └── User (tool_result: id=X, content="Successfully created... and summary...") + "(self-prompt): task 1"
    │   └── Assistant: "response to task1"
    ├── User (tool_result: id=X, content="Successfully created... and summary...") + "(self-prompt): task2"
    │   └── Assistant: "response to task2"
    └── User (tool_result: id=X, content="Successfully created... and summary...") + "(self-prompt): task3"
    |	 └── Assistant: "response to task3"
    └── User (tool_result: id=X, content="Successfully created... and summary...") + "<next user msg>"
