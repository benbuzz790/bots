File Name: C:\Users\Ben Rinauto\Documents\Code\llm-utilities-git\llm-utilities\.experiments\test@2024-08-10_21-52-34\gui\game_board.py

Requirements:
1. Implement a visual grid representation of the Connect Four board using a lightweight GUI framework compatible with the main window.
2. Create clickable columns for players to select where to drop their pieces.
3. Implement a method to update the visual state of the board based on the current game state.
4. Provide visual feedback for valid and invalid move attempts (e.g., highlighting columns).
5. Ensure the board is scalable and maintains proper proportions when the window is resized.
6. Implement a color scheme that clearly distinguishes between empty slots and player pieces.
7. Include accessibility features such as keyboard navigation for column selection.
8. Implement methods for automated testing of board interactions without requiring user input.
9. Ensure all interactive elements have timeouts of less than 1 second during testing.
10. Include unit tests within the file to verify the functionality of the game board component.

Goals:
The game_board.py file is responsible for creating and managing the visual representation of the Connect Four game board within the GUI. Its primary purpose is to render the game grid, handle player interactions for piece placement, and update the visual state of the board as the game progresses. This component aims to provide an intuitive and responsive interface for players to interact with the game, while maintaining a clear separation between the visual representation and the underlying game logic.

Interface:
from typing import Callable, Tuple

class GameBoard:
    def __init__(self, parent_widget: 'Widget', rows: int = 6, columns: int = 7):
        pass

    def update_board(self, board_state: Tuple[Tuple[int, ...], ...]) -> None:
        pass

    def highlight_column(self, column: int, highlight: bool = True) -> None:
        pass

    def set_column_click_handler(self, handler: Callable[[int], None]) -> None:
        pass

    def enable_keyboard_navigation(self) -> None:
        pass

    def disable_keyboard_navigation(self) -> None:
        pass

    def reset_board(self) -> None:
        pass

    def set_test_mode(self, enabled: bool) -> None:
        pass

def create_game_board(parent_widget: 'Widget', rows: int = 6, columns: int = 7) -> GameBoard:
    pass

