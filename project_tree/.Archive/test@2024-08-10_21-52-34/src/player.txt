File Name: C:\Users\Ben Rinauto\Documents\Code\llm-utilities-git\llm-utilities\.experiments\test@2024-08-10_21-52-34\src\player.py

Requirements:
1. Implement a Player class to represent a player in the Connect Four game.
2. Include attributes for player number (1 or 2) and piece color.
3. Provide a method for making a move, which should interact with the game board.
4. Implement input validation for human player moves to ensure they are within the valid range.
5. Design the Player class to be extensible for potential future AI player implementations.
6. Include a method to get the player's current state (e.g., number of moves made, last move).
7. Implement a simple interface for player turn management.
8. Include unit tests within the file to cover all player-related functionality and edge cases.
9. Keep the implementation simple and focused on core player functionality, adhering to the proof-of-concept level requirement.
10. Ensure the module can be used independently for testing purposes.
11. Use clear and descriptive method names for easy understanding and future expansion.
12. Implement error handling for invalid player actions or states.

Goals:
The 'player.py' file is designed to manage player-related functionality in the Connect Four game. Its primary goals are:
1. Define a Player class to represent each player in the game.
2. Handle player-specific attributes such as player number and piece color.
3. Provide methods for player actions, particularly making moves.
4. Support both human and potential AI players (for future expansion).
5. Facilitate easy integration with the main game logic and board state.

Interface:
from typing import Tuple

class Player:
    def __init__(self, player_number: int, piece_color: str):
        pass

    def make_move(self, column: int) -> bool:
        pass

    def get_player_number(self) -> int:
        pass

    def get_piece_color(self) -> str:
        pass

    def get_state(self) -> Tuple[int, int]:
        pass

    def reset(self) -> None:
        pass

class HumanPlayer(Player):
    def get_move_input(self) -> int:
        pass

def create_player(player_number: int, piece_color: str, is_human: bool = True) -> Player:
    pass

