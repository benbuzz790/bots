File Name: C:\Users\Ben Rinauto\Documents\Code\llm-utilities-git\llm-utilities\.experiments\test@2024-08-10_21-52-34\src\board.py

Requirements:
1. Implement a Board class to represent the Connect Four game board.
2. Define the board as a 6x7 grid, using a suitable data structure (e.g., 2D list or numpy array).
3. Provide methods to place a piece in a specific column.
4. Implement checks for valid moves (e.g., column not full).
5. Include methods to check if a winning condition is met (four in a row horizontally, vertically, or diagonally).
6. Offer a method to check if the board is full (draw condition).
7. Implement a method to reset the board to its initial state.
8. Provide a string representation of the board for easy visualization.
9. Include unit tests within the file to cover all board operations and edge cases.
10. Keep the implementation simple and focused on core board functionality, adhering to the proof-of-concept level requirement.
11. Ensure the module can be used independently for testing purposes.
12. Use clear and descriptive method names for easy understanding and future expansion.

Goals:
The 'board.py' file is responsible for representing and managing the Connect Four game board. Its primary goals are:
1. Provide a data structure to represent the game board's state.
2. Offer methods to manipulate and query the board state.
3. Implement logic for placing pieces and checking valid moves.
4. Support win condition checks by providing board analysis functions.
5. Ensure the board state can be easily visualized and tested.

Interface:
from typing import List, Tuple

class Board:
    def __init__(self):
        pass

    def place_piece(self, column: int, player: int) -> bool:
        pass

    def is_valid_move(self, column: int) -> bool:
        pass

    def check_win(self, player: int) -> bool:
        pass

    def is_full(self) -> bool:
        pass

    def reset(self) -> None:
        pass

    def get_state(self) -> List[List[int]]:
        pass

    def __str__(self) -> str:
        pass

def create_board() -> Board:
    pass

